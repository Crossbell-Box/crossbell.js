/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Abi, AbiInterface } from "../Abi";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWeb3Entry",
        name: "_web3Entry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fromProfileId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "toProfileIds",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "toAddresses",
            type: "address[]",
          },
          {
            internalType: "bytes32",
            name: "linkType",
            type: "bytes32",
          },
        ],
        internalType: "struct DataTypes.linkProfilesInBatchData",
        name: "vars",
        type: "tuple",
      },
    ],
    name: "linkProfilesInBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "web3Entry",
    outputs: [
      {
        internalType: "contract IWeb3Entry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Abi__factory {
  static readonly abi = _abi;
  static createInterface(): AbiInterface {
    return new utils.Interface(_abi) as AbiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Abi {
    return new Contract(address, _abi, signerOrProvider) as Abi;
  }
}
